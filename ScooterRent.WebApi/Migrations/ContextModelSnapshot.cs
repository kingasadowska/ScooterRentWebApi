// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScooterRent.WebApi.Database;

namespace ScooterRent.WebApi.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("ScooterRent.WebApi.Database.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int?>("ScooterId");

                    b.HasKey("Id");

                    b.HasIndex("ScooterId")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ScooterRent.WebApi.Database.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DefectType");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Defects");
                });

            modelBuilder.Entity("ScooterRent.WebApi.Database.Rental", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BeginRentTime");

                    b.Property<int?>("ClientId");

                    b.Property<DateTime>("EndRentTime");

                    b.Property<int?>("ScooterId");

                    b.HasKey("OrderId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ScooterId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("ScooterRent.WebApi.Database.Scooter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DefectId");

                    b.Property<int>("SerialNumber");

                    b.HasKey("Id");

                    b.HasIndex("DefectId")
                        .IsUnique();

                    b.ToTable("Scooters");
                });

            modelBuilder.Entity("ScooterRent.WebApi.Database.Client", b =>
                {
                    b.HasOne("ScooterRent.WebApi.Database.Scooter", "Scooter")
                        .WithOne("Client")
                        .HasForeignKey("ScooterRent.WebApi.Database.Client", "ScooterId");
                });

            modelBuilder.Entity("ScooterRent.WebApi.Database.Rental", b =>
                {
                    b.HasOne("ScooterRent.WebApi.Database.Client", "Client")
                        .WithMany("Rentals")
                        .HasForeignKey("ClientId");

                    b.HasOne("ScooterRent.WebApi.Database.Scooter", "Scooter")
                        .WithMany("Rentals")
                        .HasForeignKey("ScooterId");
                });

            modelBuilder.Entity("ScooterRent.WebApi.Database.Scooter", b =>
                {
                    b.HasOne("ScooterRent.WebApi.Database.Defect", "Defect")
                        .WithOne("Scooter")
                        .HasForeignKey("ScooterRent.WebApi.Database.Scooter", "DefectId");
                });
#pragma warning restore 612, 618
        }
    }
}
